<% layout('/layouts/boilerplate') -%>
<!-- <br> -->

  <body>
    <div id="filters">
      <div class="filter" data-category="All" >
        <div><i class="fa-solid fa-earth-americas"></i></div>
        <p>All</p>
      </div>
      <div class="filter" data-category="Trending">
        <div> <i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
      </div>
      <div class="filter" data-category="Rooms">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
      </div>
      <div class="filter" data-category="Iconic Cities">
        <div><i class="fa-solid fa-building"></i></div>
        <p>Iconic Cities</p>
      </div>
      <div class="filter" data-category="Amazing Pools">
        <div><i class="fa-solid fa-water"></i></div>
        <p>Pools</p>
      </div>
      <div class="filter" data-category="Beach">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>
      <div class="filter" data-category="Mountains">
        <div><i class="fa-solid fa-mountain-sun"></i></div>
        <p>Mountains</p>
      </div>
      <div class="filter" data-category="Farms">
        <div><i class="fa-solid fa-cow"></i></i></div>
        <p>Farms</p>
      </div>
      <div class="filter" data-category="Lake Front">
        <div><i class="fa-solid fa-house-flood-water-circle-arrow-right"></i></div>
        <p>Lake Front</p>
      </div>
      <div class="filter" data-category="Cabin">
        <div><i class="fa-solid fa-house-lock"></i></div>
        <p>Cabin</p>
      </div>
      <div class="filter" data-category="Castle">
        <div><i class="fa-solid fa-chess-rook"></i></div>
        <p>Castle</p>
      </div>

      <div class="tax-toggle">
        <div class="form-check-reverse form-switch">
          <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
          <label class="form-check-label" for="flexSwitchCheckDefault">Include Taxes</label>
        </div>
      </div>
    </div> <br>
    <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-2  ">
      <!-- <% for(listing of listings){ %>
        
        <a href="/listings/<%= listing._id %>">
           
          <div class="card listing-card" id="card">
            <img 
            src="<%= listing.image.url %>" 
            class="card-img-top" 
            alt="Listing_Image" 
            style="height: 18rem;">
  
            <div class="card-img-overlay"></div>
            <div class="card-body">
              <p class="card-text">
                <b><%= listing.title %></b> 
                <br>Price : &#8377;
                <%= listing.price ? listing.price.toLocaleString("en-IN") : "N/A " %>/Night
              </p>
            </div>
          </div>
        </a>

      <% } %> -->
      <% for (let listing of listings) { %>
        <a href="/listings/<%= listing._id %>">
          <div 
            class="card listing-card" 
            id="card" 
            data-category="<%= listing.category %>"
          >
            <img src="<%= listing.image.url %>" class="card-img-top" style="height: 18rem;">
            <div class="card-img-overlay"></div>
            <div class="card-body">
              <b><%= listing.title %></b><br>
              <p class="card-text">
                Price: â‚¹ <%= listing.price?.toLocaleString("en-IN") || "N/A" %>/Night
                <i class="tax-Info">&nbsp; &nbsp; +18% GST</i>
              </p>
            </div>
          </div>
        </a>
      <% } %>
      
    </div>
    <script>
      const filters = document.querySelectorAll(".filter");
      const cards = document.querySelectorAll(".listing-card");
    
      filters.forEach(filter => {
        filter.addEventListener("click", () => {
          const selectedCategory = filter.getAttribute("data-category");
    
          cards.forEach(card => {
            const cardCategory = card.getAttribute("data-category");
            const shouldShow = selectedCategory === "All" || cardCategory === selectedCategory;
            card.parentElement.style.display = shouldShow ? "block" : "none";
          });
    
          // Optional: add active filter highlighting
          filters.forEach(f => f.classList.remove("active-filter"));
          filter.classList.add("active-filter");
        });
      });
      // Set default "All" as active on initial load
      window.addEventListener("DOMContentLoaded", () => {
        const defaultFilter = document.querySelector('.filter[data-category="All"]');
        if (defaultFilter) {
          defaultFilter.classList.add("active-filter");
        }
      });

      const taxSwitch = document.getElementById("flexSwitchCheckDefault");
      taxSwitch.addEventListener("click",() => {
        let taxInfo = document.getElementsByClassName("tax-Info");
        for(let info of taxInfo){
          if(info.style.display != "inline"){
            info.style.display = "inline";
          }else{
            info.style.display = "none"
          }
        }
      })
    </script>
    
  </body>